@page
@model AtpCore.Pages.FavoritesModel

@using Microsoft.JSInterop
@using System;
@using Newtonsoft.Json;
@using System.Net.Http;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc;
@using System.Collections.Generic;
@using System.Net.Http.Json;
@inject IJSRuntime JSRuntime

@functions {

    private List<string> FavoritePlayers = new List<string>();

    protected void OnAfterRenderAsync(string player)
    {
        //string player = e.ToString();
        //if (FavoritePlayers is null)

        if (!FavoritePlayers.Contains(player))
        {
            FavoritePlayers.Add(player);
        }
        else
        {
            FavoritePlayers.Remove(player);
        }

        CookieOptions options = new CookieOptions();
        options.Expires = DateTime.Now.AddDays(365);
        options.Path = "/";
        Response.Cookies.Append("favorite-players-test", JsonConvert.SerializeObject(FavoritePlayers), options);

    }
}



<div class="row" id="content">
    <h1>@ViewData["title"]</h1>

    @*<button type="button" class="btn btn-primary" @onclick="TriggerJsPrompt">
        Trigger JavaScript Prompt
    </button>*@

    <table class="table table-striped border">
        <tr class="table-secondary">
            <th class="text-center">
                @Html.DisplayNameFor(m => m.FavoritePlayerList[0].Rank)
            </th>
            <th class="text-center">
                Player
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(m => m.FavoritePlayerList[0].Points)
            </th>
            <th class="text-center">
                Previous Rank
            </th>
            <th class="text-center">
                Age
            </th>
            <th class="text-center">
                Country
            </th>
            <th class="text-center">
                Add to Favorites
            </th>
        </tr>

        @foreach (var item in Model.FavoritePlayerList)
        {
            <tr class="text-center">
                <td class="player-rank">
                    @Html.DisplayFor(modelItem => item.Rank)<br />
                    <a class="player-bio" style="font-size: 0.35em" role="button" data-toggle="collapse" href="#@($"{item.PlayerId}Accordian")" onclick="togglePlayerInfo('@($"#{item.PlayerId}Row")')" aria-controls="@($"{item.PlayerId}Accordian")" aria-expanded="false">Info</a>
                </td>
                <td class="player-name">
                    <img width="30%" src="https://www.atptour.com/@(item.PlayerHeadshotImageCmsUrl)" alt="@item.FirstName @item.LastName" /><br />
                    @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)<br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Points)<br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrevRank)<br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AgeAtRankDate)<br />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CountryName)<br />
                </td>
            </tr>
            <tr>
                <td id="@($"{item.PlayerId}Row")" colspan="7">
                    <div id="@($"{item.PlayerId}Accordian")" class="collapse">
                        @await Component.InvokeAsync("PlayerExpanded", new
                        {
                            PlayerId = @item.PlayerId
                            })
                    </div>
                </td>
            </tr>
        }
    </table>
</div>